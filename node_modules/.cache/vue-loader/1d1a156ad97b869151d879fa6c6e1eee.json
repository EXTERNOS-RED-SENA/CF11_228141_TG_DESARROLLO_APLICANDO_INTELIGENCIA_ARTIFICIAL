{"remainingRequest":"/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/src/pages/Glosario.vue?vue&type=style&index=0&id=6dde4a2a&prod&lang=sass","dependencies":[{"path":"/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/src/pages/Glosario.vue","mtime":1734979001475},{"path":"/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5nbG9zYXJpbwogICZfX2xldHJhLWl0ZW0KICAgIGRpc3BsYXk6IGZsZXgKICAgICZfX3RleHRvCiAgICAgIHBhZGRpbmctdG9wOiA1cHgKICAgICZfX2xldHJhCiAgICAgICZfX2ljb25vCiAgICAgICAgd2lkdGg6IDMycHgKICAgICAgICBoZWlnaHQ6IDMycHgKICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmUKICAgICAgICBsaW5lLWhlaWdodDogMWVtCiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXNpc3RlbWEtZAoKICAgICAgICBzcGFuCiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGUKICAgICAgICAgIGxlZnQ6IDUwJQogICAgICAgICAgdG9wOiA1MCUKICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsLTUwJSkKICAgICAgICAgIGZvbnQtc2l6ZTogMS4xZW0KICAgICAgICAgIGZvbnQtd2VpZ2h0OiAkYmFzZS1ibGFjay1mb250LXdlaWdodAo="},{"version":3,"sources":["Glosario.vue"],"names":[],"mappings":";AAyKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Glosario.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <div class=\"curso-main-container glosario\">\n    <BannerInterno icono=\"fas fa-atlas\" titulo=\"Glosario\"></BannerInterno>\n    <div class=\"container tarjeta tarjeta--blanca p-4 p-md-5 mb-5\">\n      <div\n        v-for=\"letra in orderedData\"\n        :key=\"'letra-' + letra.letra\"\n        class=\"glosario__letra-item mb-2\"\n      >\n        <div class=\"glosario__letra-item__letra me-4\">\n          <div class=\"glosario__letra-item__letra__icono\">\n            <span>{{ letra.letra }}</span>\n          </div>\n        </div>\n        <div class=\"glosario__letra-item__texto\">\n          <p\n            v-for=\"termino in letra.terminos\"\n            :key=\"termino.termino\"\n            class=\"mb-3\"\n          >\n            <strong><i class=\"lista-ul__vineta\"></i></strong\n            ><strong v-html=\"termino.terminoHtml || termino.termino\"> </strong\n            ><strong>: </strong><span v-html=\"termino.significado\"></span>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport plantillaMixins from '@/js/plantillaMixins'\nexport default {\n  name: 'Glosario',\n  mixins: [plantillaMixins],\n  data() {\n    return {\n      glosarioData: [\n        {\n          termino: 'MVVM (Modelo-Vista-VistaModelo)',\n          significado:\n            'Un patrón de arquitectura de <em>software</em> que separa la aplicación en tres componentes: el Modelo (datos y lógica de negocio), la Vista (interfaz de usuario) y el VistaModelo (lógica de presentación que conecta el Modelo y la Vista). Facilita el mantenimiento y la escalabilidad de aplicaciones con interfaces complejas.',\n        },\n        {\n          termino: 'Retrofit',\n          significado:\n            'Biblioteca de cliente HTTP para Android y Java que simplifica las solicitudes y respuestas HTTP. Permite interactuar con APIs RESTful de manera eficiente, manejando automáticamente la serialización y deserialización de datos.',\n        },\n        {\n          termino: 'Corrutinas',\n          significado:\n            'Característica de Kotlin que permite escribir código asíncrono de manera secuencial. Facilita el manejo de operaciones que consumen tiempo, como solicitudes de red o acceso a bases de datos, sin bloquear el hilo principal de la aplicación.',\n        },\n        {\n          termino: 'Clean Architecture',\n          significado:\n            'Enfoque de arquitectura de <em>software</em> que promueve la separación de responsabilidades en capas independientes. Mejora la mantenibilidad, escalabilidad y testabilidad al aislar la lógica de negocio de los detalles de implementación y <em>frameworks</em>.',\n        },\n        {\n          termino: 'SharedPreferences',\n          significado:\n            'Mecanismo de almacenamiento en Android que permite guardar datos simples en pares clave-valor. Es ideal para almacenar configuraciones, preferencias del usuario y pequeñas cantidades de información persistente.',\n        },\n        {\n          termino: 'SQLite',\n          significado:\n            'Sistema de gestión de bases de datos relacional, liviano y de código abierto. Integrado en Android, permite almacenar y manipular datos estructurados localmente en el dispositivo sin necesidad de un servidor externo.',\n        },\n        {\n          termino: 'Room',\n          significado:\n            'Biblioteca de persistencia de datos de Android que actúa como una capa de abstracción sobre SQLite. Simplifica las operaciones de base de datos utilizando objetos y anotaciones, facilitando el acceso a datos y reduciendo errores.',\n        },\n        {\n          termino: 'Firebase Realtime Database',\n          significado:\n            'Base de datos NoSQL en tiempo real alojada en la nube de Firebase. Permite sincronizar y almacenar datos en formato JSON entre múltiples clientes de manera instantánea, con soporte para operaciones en línea y fuera de línea.',\n        },\n        {\n          termino: 'API RESTful',\n          significado:\n            'Interfaz de programación que sigue los principios REST (Representational State Transfer). Utiliza métodos HTTP estándar como GET, POST, PUT y DELETE para permitir la comunicación y manipulación de recursos entre clientes y servidores.',\n        },\n        {\n          termino: 'GSON',\n          significado:\n            'Biblioteca de Java desarrollada por Google para convertir objetos Java en su representación JSON y viceversa. Facilita el manejo de datos al interactuar con servicios <em>web</em> que utilizan JSON como formato de intercambio.',\n        },\n        {\n          termino: 'Jetpack Compose',\n          significado:\n            'Kit de herramientas moderno y declarativo para construir interfaces de usuario en Android. Simplifica el desarrollo de UI al permitir definir componentes de forma intuitiva y reactiva, actualizando automáticamente la interfaz ante cambios en los datos.',\n        },\n        {\n          termino: 'Material Design',\n          significado:\n            'Sistema de diseño creado por Google que proporciona directrices, componentes y patrones visuales para crear interfaces de usuario consistentes, intuitivas y atractivas en aplicaciones móviles y <em>web</em>.',\n        },\n        {\n          termino: 'Pruebas Unitarias',\n          significado:\n            'Tipo de pruebas de <em>software</em> que verifica el funcionamiento correcto de componentes individuales o unidades de código (como funciones o métodos). Aseguran que cada parte cumple con los requisitos y funciona aisladamente de otras partes del sistema.',\n        },\n        {\n          termino: 'Entorno de Desarrollo Integrado (IDE)',\n          significado:\n            'Aplicación que proporciona un conjunto completo de herramientas para el desarrollo de software en una sola interfaz. Incluye editor de código, depurador, compilador y otras utilidades que facilitan la programación.',\n        },\n        {\n          termino: 'EventBus',\n          significado:\n            'Biblioteca para Android que implementa un sistema de publicación y suscripción de eventos. Permite la comunicación eficiente entre componentes de la aplicación (como actividades y fragmentos) sin crear dependencias directas, reduciendo el acoplamiento y mejorando la modularidad.',\n        },\n      ],\n    }\n  },\n  computed: {\n    orderedData() {\n      const newGlosarioData = [...this.glosarioData]\n      newGlosarioData.forEach(element => {\n        element.significado =\n          element.significado.charAt(0).toLowerCase() +\n          element.significado.slice(1)\n      })\n\n      const sortedData = [...newGlosarioData].reduce((r, e) => {\n        const letra = this.quitarAcentos(e.termino.toLowerCase())[0]\n        if (!r[letra]) r[letra] = { letra, terminos: [e] }\n        else r[letra].terminos.push(e)\n        return r\n      }, {})\n\n      const soloLetras = Object.keys(sortedData).sort()\n      const newSortedData = []\n\n      soloLetras.forEach(element => {\n        const letraObj = sortedData[element]\n        let terminos = letraObj.terminos\n\n        if (terminos.length > 1) {\n          const terminosOrdenados = []\n          const soloTerminos = letraObj.terminos\n            .map(termObj => termObj.termino)\n            .sort((a, b) => {\n              const an = this.quitarAcentos(a).toLowerCase()\n              const bn = this.quitarAcentos(b).toLowerCase()\n              if (an < bn) return -1\n              if (bn < an) return 1\n              return 0\n            })\n          soloTerminos.forEach(term => {\n            terminosOrdenados.push(\n              terminos.find(termino => termino.termino === term),\n            )\n          })\n          terminos = terminosOrdenados\n        }\n        newSortedData.push({\n          letra: letraObj.letra.toUpperCase(),\n          terminos: terminos,\n        })\n      })\n      return newSortedData\n    },\n  },\n}\n</script>\n\n<style lang=\"sass\">\n.glosario\n  &__letra-item\n    display: flex\n    &__texto\n      padding-top: 5px\n    &__letra\n      &__icono\n        width: 32px\n        height: 32px\n        position: relative\n        line-height: 1em\n        border-radius: 50%\n        background-color: $color-sistema-d\n\n        span\n          position: absolute\n          left: 50%\n          top: 50%\n          transform: translate(-50%,-50%)\n          font-size: 1.1em\n          font-weight: $base-black-font-weight\n</style>\n"]}]}