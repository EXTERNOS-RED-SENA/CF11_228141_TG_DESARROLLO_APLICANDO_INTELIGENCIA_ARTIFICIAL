{"remainingRequest":"/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/thread-loader/dist/cjs.js!/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/babel-loader/lib/index.js!/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/src/pages/Tema3.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/src/pages/Tema3.vue","mtime":1734979001475},{"path":"/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/babel.config.js","mtime":1734979001375},{"path":"/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/CF11_228141_TG_DESARROLLO_APLICANDO_INTELIGENCIA_ARTIFICIAL/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdUZW1hMycsCiAgZGF0YTogKCkgPT4gKHsKICAgIC8vIHZhcmlhYmxlcyBkZSB2dWUKICB9KSwKICBtb3VudGVkKCkgewogICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICB0aGlzLiRhb3NSZWZyZXNoKCk7CiAgICB9KTsKICB9LAogIHVwZGF0ZWQoKSB7CiAgICB0aGlzLiRhb3NSZWZyZXNoKCk7CiAgfQp9Ow=="},{"version":3,"names":["name","data","mounted","$nextTick","$aosRefresh","updated"],"sources":["src/pages/Tema3.vue"],"sourcesContent":["<template lang=\"pug\">\n.curso-main-container.pb-3\n  BannerInterno\n  .container.tarjeta.tarjeta--blanca.p-4.p-md-5.mb-5\n    .titulo-principal.color-acento-contenido(data-aos=\"flip-up\")\n      .titulo-principal__numero\n        span 3\n      h1 Desarrollo de APIs RESTful y modelos de IA\n    \n    .cont_3_1\n      .row\n        .col-lg-auto.d-none.d-lg-block(data-aos=\"fade-right\")\n          figure\n            img(src=\"@/assets/curso/tema3/1.svg\")\n        .col-lg(data-aos=\"zoom-in\")\n          .p-4.d-flex.align-content-center.h-100.flex-wrap(style=\"background-color:#DED5DB;\")\n            p.mb-0 El desarrollo de APIs RESTful es fundamental para permitir la comunicación eficiente entre el cliente y el servidor en aplicaciones modernas, especialmente aquellas que integran inteligencia artificial. Este capítulo explora cómo codificar APIs RESTful, integrar modelos de IA en ellas y utilizar herramientas clave que facilitan el proceso de desarrollo.\n        .col-lg-auto.d-none.d-xl-block(data-aos=\"fade-left\")\n          figure\n            img(src=\"@/assets/curso/tema3/2.png\")\n      \n\n      Separador\n    \n      .titulo-segundo(data-aos=\"flip-up\")\n        h2#t_3_1 3.1\tCodificación de APIs RESTful\n      \n      p(data-aos=\"fade-right\") Las APIs RESTful (#[em Representational State Transfer]) son interfaces que permiten a las aplicaciones comunicarse con servicios #[em web] utilizando protocolos HTTP estándar. Al diseñar una API para un modelo de inteligencia artificial, es esencial seguir principios que garanticen su eficiencia, escalabilidad y facilidad de uso.\n\n      .row.mt-4\n        .col-lg-8(data-aos=\"fade-right\")\n          .p-4.p-md-3.d-flex.align-content-center.h-100.flex-wrap(style=\"background-color:#CFF8DE;border-radius:7px;\")\n            .row\n              .col-md-auto.d-none.d-md-block(style=\"place-self:center;\")\n                figure\n                  img(src=\"@/assets/curso/tema3/4.svg\")\n              .col-md(style=\"place-self:center;\")\n                p.mb-0 La creación de una API comienza con la definición clara de los recursos que se expondrán y las operaciones que se permitirán sobre ellos. Por ejemplo, si se desarrolla una aplicación que ofrece recomendaciones de películas basadas en preferencias del usuario, la API podría incluir recursos como “usuarios”, “películas” y “recomendaciones”. Cada recurso se manipula a través de métodos HTTP como GET, POST, PUT y DELETE, que corresponden a operaciones de lectura, creación, actualización y eliminación respectivamente.\n        .col-lg-4.d-none.d-lg-block(data-aos=\"fade-left\")\n          figure\n            img(src=\"@/assets/curso/tema3/5.png\")\n      \n      .row.mt-4\n        .col-lg-auto.d-none.d-lg-block(data-aos=\"fade-right\")\n          figure\n            img(src=\"@/assets/curso/tema3/6.png\")\n        .col-lg(data-aos=\"fade-left\")\n          p Es importante adoptar estándares de codificación y patrones de diseño que aseguren la consistencia y mantenibilidad de la API. Utilizar convenciones de nomenclatura coherentes para las rutas y parámetros facilita la comprensión y uso por parte de otros desarrolladores. Además, implementar el manejo adecuado de errores y códigos de estado HTTP permite que los clientes de la API gestionen las respuestas de manera efectiva.\n          .p-4(style=\"background-color:#DED5DB;border-radius:7px;\")\n            p.mb-0 Las pruebas son una parte integral del desarrollo de APIs. Herramientas como Postman y Hoppscotch permiten enviar solicitudes HTTP a la API y verificar las respuestas. Con ellas, es posible simular diferentes escenarios, probar la autenticación y asegurar que los #[em endpoints] funcionen correctamente bajo diversas condiciones. Estas herramientas también facilitan la documentación de la API, proporcionando ejemplos claros de cómo interactuar con ella.\n      \n      Separador\n    \n      .titulo-segundo(data-aos=\"flip-up\")\n        h2#t_3_2 3.2\tIntegración de modelos de inteligencia artificial\n    \n    p(data-aos=\"fade-right\") La incorporación de modelos de inteligencia artificial en una API añade un nivel de complejidad y potencia adicional. Estos modelos pueden ofrecer funcionalidades avanzadas como reconocimiento de voz, análisis de imágenes o predicciones basadas en datos.\n\n    .row.mt-4\n      .col-lg-auto.d-none.d-lg-block(data-aos=\"fade-right\")\n        figure\n          img(src=\"@/assets/curso/tema3/7.png\")\n      .col-lg(data-aos=\"fade-left\")\n        p Para implementar un modelo de IA en una API, primero es necesario entrenar el modelo utilizando datos relevantes y asegurarse de que su rendimiento cumple con los requisitos de la aplicación. Una vez entrenado, el modelo se integra en el servidor donde reside la API. Esto implica garantizar que las dependencias y bibliotecas necesarias estén disponibles en el entorno de ejecución.\n        .p-4(style=\"background-color:#CFE1FA;border-radius:7px;\")\n          p.mb-0 Al diseñar el #[em endpoint] que expondrá las capacidades del modelo, se deben considerar los formatos de entrada y salida de datos. Por ejemplo, si el modelo analiza imágenes, el #[em endpoint] debe aceptar archivos de imagen en un formato específico y devolver resultados en un formato estructurado como JSON. Es importante también manejar casos de error, como entradas no válidas o excepciones durante la ejecución del modelo.\n    \n    p.mt-4(data-aos=\"fade-right\") Existen varios requerimientos y consideraciones clave al integrar modelos de IA en APIs:\n\n    .row.mt-4\n      .col-lg-auto.d-none.d-lg-block(data-aos=\"fade-right\")\n        figure\n          img(src=\"@/assets/curso/tema3/8.png\")\n      .col-lg(data-aos=\"fade-left\")\n        AccordionRED(tipo=\"a\" clase-tarjeta=\"tarjeta\")\n          .row.col-xl-11.m-auto(titulo=\"Escalabilidad\")\n            p Los modelos de IA pueden ser intensivos en recursos. Es esencial diseñar la API para que pueda escalar horizontalmente, distribuyendo la carga entre múltiples servidores si es necesario.\n          .row.col-xl-11.m-auto(titulo=\"Latencia\")\n            p Los tiempos de respuesta deben ser aceptables para los usuarios. Optimizar el rendimiento del modelo y utilizar técnicas como la caché pueden ayudar a reducir la latencia.\n          .row.col-xl-11.m-auto(titulo=\"Seguridad\")\n            p Al manipular datos potencialmente sensibles, es vital implementar medidas de seguridad robustas, como la autenticación y autorización adecuadas, y proteger contra ataques como la inyección de código.\n          .row.col-xl-11.m-auto(titulo=\"Mantenimiento y actualización\")\n            p Los modelos de IA pueden requerir actualizaciones periódicas para mantener su precisión. Es importante planificar cómo se desplegarán estas actualizaciones sin interrumpir el servicio.\n    \n    .row.mt-4\n      .col-md-auto.d-none.d-md-block(data-aos=\"fade-right\" style=\"place-self:center;\")\n        figure\n          img(src=\"@/assets/curso/tema3/9.svg\")\n      .col-md(data-aos=\"fade-left\" style=\"place-self:center;\")\n        p.mb-0 Un ejemplo práctico de integración podría ser un servicio de traducción en tiempo real. El modelo de IA se entrena para traducir texto de un idioma a otro. La API expone un #[em endpoint] al que se envía texto en el idioma original y devuelve la traducción. Para garantizar un rendimiento óptimo, el modelo podría optimizarse utilizando técnicas de compresión o implementarse en un entorno de ejecución especializado como #[em TensorFlow Serving].\n    \n    Separador\n    \n    .titulo-segundo(data-aos=\"flip-up\")\n      h2#t_3_3 3.3\tAPIs y herramientas para el desarrollo\n    \n    .row\n      .col-lg-auto.d-none.d-xl-block(data-aos=\"fade-right\")\n        figure\n          img(src=\"@/assets/curso/tema3/10.png\")\n      .col-lg(data-aos=\"fade-left\")\n        p El uso de herramientas y bibliotecas adecuadas puede simplificar significativamente el desarrollo y mantenimiento de APIs. En el contexto de aplicaciones móviles y #[em web], Retrofit y GSON de Google son dos componentes esenciales.\n        .row\n          .col-lg\n            .p-4.d-flex.align-content-center.h-100.flex-wrap(style=\"background-color:#E6F0FC;\")\n              p.mb-0 Retrofit es una biblioteca para Android que facilita las solicitudes HTTP y la interacción con APIs RESTful. Permite definir interfaces en el código que representan los #[em endpoints] de la API, y luego, mediante anotaciones, especificar los métodos HTTP y rutas correspondientes. Retrofit maneja la serialización y deserialización de datos, lo que simplifica el manejo de las respuestas y solicitudes.\n          .col-lg-auto.d-none.d-lg-block\n            figure\n              img(src=\"@/assets/curso/tema3/11.png\")\n\n    .row.mt-4\n      .col-lg(data-aos=\"fade-right\")\n        p Por su parte, GSON es una biblioteca que permite convertir objetos Java en su representación JSON y viceversa. Al trabajar con Retrofit, GSON se utiliza para transformar automáticamente las respuestas JSON de la API en objetos que pueden manipularse en la aplicación. Esto reduce el código necesario para procesar los datos y minimiza errores asociados con el #[em parsing] manual.\n        .p-4.p-md-3(style=\"background-color:#E6FBEE;border-radius:7px;\")\n          .row\n            .col-md-auto.d-none.d-md-block(style=\"place-self:center;\")\n              figure\n                img(src=\"@/assets/curso/tema3/12.svg\")\n            .col-md(style=\"place-self:center;\")\n              p.mb-0 Otra herramienta importante es la Cloud Storage API, que proporciona acceso a servicios de almacenamiento en la nube. Esto es útil cuando la aplicación necesita manejar archivos grandes o una cantidad significativa de datos que no es práctico almacenar localmente. Integrar esta API permite cargar, descargar y gestionar archivos de manera segura y eficiente.\n        .row.mt-4\n          .col-lg-auto.d-none.d-lg-block\n            figure\n              img(src=\"@/assets/curso/tema3/13.png\")\n          .col-lg\n            p.mb-0 El EventBus es una biblioteca que facilita la comunicación entre diferentes componentes de la aplicación, especialmente en arquitecturas donde los componentes están desacoplados. Al publicar y suscribirse a eventos, se pueden notificar cambios o acciones sin crear dependencias directas entre clases. Esto mejora la modularidad y mantenibilidad del código.\n      .col-lg-auto.d-none.d-xl-block(data-aos=\"fade-left\")\n        figure\n          img(src=\"@/assets/curso/tema3/14.png\")\n    \n    p.mt-4(data-aos=\"fade-right\") La introducción a Android Pay (actualmente conocido como Google Pay) es relevante para aplicaciones que requieren procesar pagos. Integrar esta funcionalidad implica utilizar APIs específicas que manejan transacciones de manera segura, cumpliendo con estándares de seguridad y regulaciones financieras. Proporcionar una forma sencilla y confiable de realizar pagos mejora la experiencia del usuario y puede ser determinante para el éxito de la aplicación.\n\n    .col-xl-8.m-auto.col-lg-11.mt-5\n      .titulo-sexto.color-acento-contenido(data-aos=\"fade-down\")\n        h5 Tabla 2.\n        span Comparación de herramientas para el desarrollo de APIs\n      .tabla-a.color-acento-contenido(data-aos=\"fade-up\")\n        table\n          caption.mt-2.fw-normal #[strong Fuente:] OIT, 2024.\n          thead(style=\"border:0;\")\n            tr.text-center(style=\"background-color:#13DE61;\")\n              th(style=\"border:0;border-right:1px #AFAFAF solid;\") Herramienta\n              th(style=\"border:0;border-right:1px #AFAFAF solid;\") Función Principal\n              th(style=\"border:0;\") Beneficios\n          tbody.text-center\n            tr(style=\"background-color:#F6F6F6;\")\n              td(style=\"border:0;border-right:1px #AFAFAF solid;\") Retrofit\n              td(style=\"border:0;border-right:1px #AFAFAF solid;\") Cliente HTTP para Android\n              td(style=\"border:0;\") Simplifica solicitudes y respuestas\n            tr(style=\"background-color:#fff;\")\n              td(style=\"border:0;border-right:1px #AFAFAF solid;\") GSON\n              td(style=\"border:0;border-right:1px #AFAFAF solid;\") Serialización y deserialización JSON\n              td(style=\"border:0;\") Manejo automático de datos\n            tr(style=\"background-color:#F6F6F6;\")\n              td(style=\"border:0;border-right:1px #AFAFAF solid;\") Cloud Storage API\n              td(style=\"border:0;border-right:1px #AFAFAF solid;\") Almacenamiento en la nube\n              td(style=\"border:0;\") Gestión eficiente de archivos\n            tr(style=\"background-color:#fff;\")\n              td(style=\"border:0;border-right:1px #AFAFAF solid;\") EventBus\n              td(style=\"border:0;border-right:1px #AFAFAF solid;\") Comunicación entre componentes\n              td(style=\"border:0;\") Desacoplamiento y modularidad\n            tr(style=\"background-color:#F6F6F6;\")\n              td(style=\"border:0;border-right:1px #AFAFAF solid;\") Google Pay\n              td(style=\"border:0;border-right:1px #AFAFAF solid;\") Procesamiento de pagos en la aplicación\n              td(style=\"border:0;\") Seguridad y facilidad de uso\n\n    .row.mt-5\n      .col-lg-auto.d-none.d-xl-block(data-aos=\"fade-right\")\n        figure\n          img(src=\"@/assets/curso/tema3/15.png\")\n      .col-lg(data-aos=\"fade-left\")\n        p En resumen, el desarrollo de APIs RESTful y la integración de modelos de inteligencia artificial son componentes esenciales en la creación de aplicaciones modernas y sofisticadas. Al seguir prácticas recomendadas en la codificación de APIs, utilizar herramientas adecuadas y considerar cuidadosamente los aspectos de integración de IA, es posible construir sistemas robustos, escalables y eficientes.\n        .p-4.p-md-3(style=\"background-color:#EDE9EC;border-radius:7px;\")\n          .row\n            .col-md-auto.d-none.d-md-block(style=\"place-self:center;\")\n              figure\n                img(src=\"@/assets/curso/tema3/16.svg\")\n            .col-md(style=\"place-self:center;\")\n              p.mb-0 La capacidad de las APIs para conectar diferentes partes de una aplicación y permitir la interacción con servicios externos amplía significativamente las posibilidades de lo que se puede lograr. La inteligencia artificial añade una capa adicional de funcionalidad avanzada, permitiendo ofrecer experiencias personalizadas y soluciones inteligentes a problemas complejos.\n    \n    p.mt-4(data-aos=\"fade-right\") Al continuar explorando estas tecnologías y perfeccionando las habilidades en su implementación, los desarrolladores pueden crear aplicaciones que no solo satisfagan las necesidades actuales de los usuarios, sino que también estén preparadas para adaptarse a futuros avances y demandas en el campo de la tecnología.\n\n\n\n</template>\n\n<script>\nexport default {\n  name: 'Tema3',\n  data: () => ({\n    // variables de vue\n  }),\n  mounted() {\n    this.$nextTick(() => {\n      this.$aosRefresh()\n    })\n  },\n  updated() {\n    this.$aosRefresh()\n  },\n}\n</script>\n\n<style lang=\"sass\"></style>\n"],"mappings":"AA2LA;EACAA,IAAA;EACAC,IAAA,EAAAA,CAAA;IACA;EAAA,CACA;EACAC,QAAA;IACA,KAAAC,SAAA;MACA,KAAAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAD,WAAA;EACA;AACA","ignoreList":[]}]}